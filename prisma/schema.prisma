// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id               String            @id @default(uuid())
  name             String
  email            String            @unique
  password         String
  role             UserRole
  contactNo        String
  address          String
  profileImg       String
  orders           Order[]
  reviewAndRatings ReviewAndRating[]

  @@map("user")
}

model Category {
  id    String @id @default(uuid())
  title String
  books Book[]

  @@map("category")
}

model Book {
  id               String            @id @default(uuid()) // Using UUID as the ID
  title            String
  author           String
  price            Float
  genre            String
  publicationDate  String
  createdAt        DateTime          @default(now())
  updatedAt        DateTime          @updatedAt
  categoryId       String
  category         Category          @relation(fields: [categoryId], references: [id])
  reviewAndRatings ReviewAndRating[]

  @@map("book")
}

model ReviewAndRating {
  id        String   @id @default(uuid())
  review    String
  rating    Int
  userId    String
  user      User     @relation(fields: [userId], references: [id])
  bookId    String
  book      Book     @relation(fields: [bookId], references: [id])
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@map("review_and_rating")
}

model Order {
  id           String   @id @default(uuid())
  userId       String
  user         User     @relation(fields: [userId], references: [id])
  orderedBooks Json
  status       Values   @default(pending) // Values: 'pending', 'shipped', 'delivered'
  createdAt    DateTime @default(now()) // Order creation timestamp

  @@map("order")
}

enum Values {
  pending
  shipped
  delivered
}

enum UserRole {
  admin
  customer
}
